
package project;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import DBconnect.DBconnect;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import java.text.*;
import java.awt.print.*;
//import java.time.Clock;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JTable;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
/**
 *
 * @author B.A.Pavan Chamantha
 */
public class UserDetails extends javax.swing.JFrame {

    Connection con=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    
    int timeRun=0;
    
    public UserDetails()    //Constructor of the UserDetails
    {
        initComponents();
        
        con = DBconnect.connect();           //Database Connection
        TableLoad();                         //Jtable1 Display
        SearchField.setText("Search");       //SearchField default value
        //CurrentDate();                       //display current date
        CurrentDate d1=new CurrentDate();
        date.setText(d1.year+"/"+d1.month+"/"+d1.day);
        new Thread()
        {
            public void run()
            {
                while(timeRun==0)
                {

                    Calendar cal=new GregorianCalendar();

                    int hour=cal.get(Calendar.HOUR);
                    if(hour==0){
                        hour=hour+12;
                    }
                    int min=cal.get(Calendar.MINUTE);
                    int sec=cal.get(Calendar.SECOND);
                    int AM_PM=cal.get(Calendar.AM_PM);


                    String day_night=""; 
                    if(AM_PM==1)
                    {
                        day_night="PM";
                    }
                    else
                    {
                        day_night="AM";
                    }

                    String time =hour+":"+min+":"+sec+""+day_night;

                    Clock.setText(time);
                }
            }
        }.start();
    }
    
    /*public void CurrentDate()
    {
        Calendar cal=new GregorianCalendar();
        int month=cal.get(Calendar.MONTH);
        int year=cal.get(Calendar.YEAR);
        int day=cal.get(Calendar.DAY_OF_MONTH);
        date.setText(year+"/"+(month+1)+"/"+day);
    }*/
    
    
    public boolean ValidateEmail(String email)
    {
        boolean status=false;
        String EMAIL_PATTERN="^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"+"[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
        
        Pattern pattern=Pattern.compile(EMAIL_PATTERN);
        Matcher matcher=pattern.matcher(email);
        if(matcher.matches())
        {
            status=true;
        }
        else
        {
            status=false;
        }
        return status;
    }

    public void TableLoad()     //Jtable1 Display Method
    {
        try
        {
            String sql="SELECT * from members";                              //SQL queary for Display Data from the details table
            pst=con.prepareStatement(sql);                                   //Prepare the queary for database connection
            rs=pst.executeQuery();                                           //Execute the queary 
            UserDetailsTable.setModel(DbUtils.resultSetToTableModel(rs));    //Set the queary values to the UserDetailsTable  
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);      //Display the exception
        }
            
        
        
    } 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator5 = new javax.swing.JSeparator();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jSeparator12 = new javax.swing.JPopupMenu.Separator();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator13 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        UserDetailsTable = new javax.swing.JTable();
        SearchField = new javax.swing.JTextField();
        jToolBar1 = new javax.swing.JToolBar();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        BackButton = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        LogOutButton = new javax.swing.JButton();
        jSeparator7 = new javax.swing.JToolBar.Separator();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        PrintButton = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JToolBar.Separator();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        jPanel1 = new javax.swing.JPanel();
        NameLabel = new javax.swing.JLabel();
        PhoneLabel = new javax.swing.JLabel();
        EmailField = new javax.swing.JTextField();
        UserTypeLabel = new javax.swing.JLabel();
        EmailLabel = new javax.swing.JLabel();
        LastNField = new javax.swing.JTextField();
        NOLabel = new javax.swing.JLabel();
        NoLabel = new javax.swing.JLabel();
        UnameField = new javax.swing.JTextField();
        UnameLabel = new javax.swing.JLabel();
        PasswordField = new javax.swing.JTextField();
        UserTypeBox = new javax.swing.JComboBox();
        email_lable = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        YearBox = new javax.swing.JComboBox<String>();
        jLabel2 = new javax.swing.JLabel();
        FirstNField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        UpdateButton = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();
        RemoveButton = new javax.swing.JButton();
        AddButton = new javax.swing.JButton();
        iReportButton = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<String>();
        jPanel4 = new javax.swing.JPanel();
        Clock = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator14 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator15 = new javax.swing.JPopupMenu.Separator();
        jMenuItem6 = new javax.swing.JMenuItem();

        jMenu3.setText("User");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logout.png"))); // NOI18N
        jMenuItem1.setText("Log Out");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem1);
        jMenu3.add(jSeparator12);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/help.png"))); // NOI18N
        jMenuItem3.setText("Help");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);
        jMenu3.add(jSeparator13);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/close.png"))); // NOI18N
        jMenuItem2.setText("Close");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuBar2.add(jMenu3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        UserDetailsTable.setAutoCreateRowSorter(true);
        UserDetailsTable.setBackground(new java.awt.Color(255, 204, 102));
        UserDetailsTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        UserDetailsTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        UserDetailsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "No", "Username", "Email", "Name", "Phone", "UserType"
            }
        ));
        UserDetailsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UserDetailsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(UserDetailsTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 110, 500, 360));

        SearchField.setMinimumSize(new java.awt.Dimension(0, 14));
        SearchField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchFieldMouseClicked(evt);
            }
        });
        SearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchFieldKeyReleased(evt);
            }
        });
        getContentPane().add(SearchField, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 10, 140, -1));

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setAlignmentY(0.5F);
        jToolBar1.add(jSeparator2);
        jToolBar1.add(jSeparator9);

        BackButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/arrow-back-icon_1.png"))); // NOI18N
        BackButton.setText("Back");
        BackButton.setVerifyInputWhenFocusTarget(false);
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(BackButton);
        jToolBar1.add(jSeparator3);
        jToolBar1.add(jSeparator4);

        LogOutButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LogOutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logout-icon.png"))); // NOI18N
        LogOutButton.setText("Log Out");
        LogOutButton.setFocusable(false);
        LogOutButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        LogOutButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        LogOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(LogOutButton);
        jToolBar1.add(jSeparator7);
        jToolBar1.add(jSeparator1);

        PrintButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        PrintButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/print-icon.png"))); // NOI18N
        PrintButton.setText("Print");
        PrintButton.setFocusable(false);
        PrintButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        PrintButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        PrintButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(PrintButton);
        jToolBar1.add(jSeparator8);
        jToolBar1.add(jSeparator10);

        getContentPane().add(jToolBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 70));

        jPanel1.setBackground(new java.awt.Color(255, 204, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "User Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Algerian", 1, 18), new java.awt.Color(0, 0, 204))); // NOI18N

        NameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        NameLabel.setText("First Name");

        PhoneLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        PhoneLabel.setText("Password");

        UserTypeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        UserTypeLabel.setText("User Type");

        EmailLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EmailLabel.setText("Email");

        NOLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        NOLabel.setText("No");

        UnameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        UnameLabel.setText("Username");

        UserTypeBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--------Select-------", "Admin User", "Normal  User", " " }));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Year");

        YearBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-------Select Year---------", "First year", "Second year", "Third year", "Fourth year" }));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Last Name");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(NOLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                            .addComponent(UserTypeLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(EmailLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(UnameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PhoneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(EmailField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                                .addComponent(UnameField, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(NoLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(UserTypeBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, 166, Short.MAX_VALUE)
                                .addComponent(YearBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(PasswordField, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(LastNField))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(NameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(FirstNField, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .addComponent(email_lable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(32, 32, 32))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(NOLabel)
                    .addComponent(NoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UnameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UnameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(EmailLabel)
                    .addComponent(EmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(email_lable, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FirstNField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(LastNField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PhoneLabel)
                    .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(YearBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UserTypeLabel)
                    .addComponent(UserTypeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 290, 360));

        jPanel2.setBackground(new java.awt.Color(255, 204, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buttons", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Algerian", 1, 18), new java.awt.Color(255, 51, 51))); // NOI18N

        UpdateButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        UpdateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edit-icon.png"))); // NOI18N
        UpdateButton.setText("Update");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        ClearButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ClearButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Actions-edit-clear-icon.png"))); // NOI18N
        ClearButton.setText("   Clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        RemoveButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        RemoveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Actions-list-remove-user-icon.png"))); // NOI18N
        RemoveButton.setText("Remove");
        RemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveButtonActionPerformed(evt);
            }
        });

        AddButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        AddButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Actions-list-add-user-icon.png"))); // NOI18N
        AddButton.setText("   Add   ");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        iReportButton.setText("IReport");
        iReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iReportButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UpdateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RemoveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ClearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(iReportButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AddButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(UpdateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(RemoveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ClearButton)
                .addGap(18, 18, 18)
                .addComponent(iReportButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 110, -1, 360));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---------Select the order---------", "User ID Ascending order", "User ID  Descending order", "First Name Ascending order", "First Name Descending order", "Type Ascending order", "Type Decsending order", "Year Ascending order", "Year Descending order", " " }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, 210, -1));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        Clock.setFont(new java.awt.Font("DS-Digital", 1, 18)); // NOI18N
        Clock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        date.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        date.setText("date");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(Clock, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(date)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Clock, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(date)
                .addContainerGap())
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 0, -1, -1));

        jMenu4.setText("User");

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logout.png"))); // NOI18N
        jMenuItem4.setText("Log Out");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);
        jMenu4.add(jSeparator14);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/help.png"))); // NOI18N
        jMenuItem5.setText("Help");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem5);
        jMenu4.add(jSeparator15);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/close.png"))); // NOI18N
        jMenuItem6.setText("Close");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem6);

        jMenuBar3.add(jMenu4);

        setJMenuBar(jMenuBar3);

        setSize(new java.awt.Dimension(1061, 564));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed

        String Col1= NoLabel.getText();
        String Col2=UnameField.getText();
        String Col3=EmailField.getText();
        String Col4=FirstNField.getText();
        String Col5=LastNField.getText();
        String Col6=PasswordField.getText();
        String Col7=YearBox.getSelectedItem().toString();
        int Col8=UserTypeBox.getSelectedIndex();
      
        int s=YearBox.getSelectedIndex();
        
        if(Col2.equals(""))     //Check for empty Field
        {
            JOptionPane.showMessageDialog(null,"Please Enter the Username.");   //Show the Error Message
        }
        else
        {
              if(s==0)                  //YearBox 0 index --Select Year--
              {
                  JOptionPane.showMessageDialog(null,"Please Select the Year.");
              }
              if(Col8==0)               //UserTypeBox 0 index -----Select-----
              {
                  JOptionPane.showMessageDialog(null,"Please Select the User Type.");
              }
              if(Col6.equals(""))       //PssswordBox Empty
              {
                  JOptionPane.showMessageDialog(null,"Please Type a Password.");
              }
            
              else
              {
                  boolean status=ValidateEmail(EmailField.getText());
                  if(status)
                  {
                        email_lable.setText("Email valid");
                        try
                        {
                            String q = "INSERT INTO members(UserName,Email_Address,First_Name,Last_Name,PassWord,Learning_year,type) VALUES('"+ Col2+"','"+ Col3 +"','"+ Col4 +"','"+ Col5 +"','"+ Col6 +"','"+Col7+"','"+Col8+"')";//Sql queary for insert into details table in the database

                            pst=con.prepareStatement(q);
                            pst.execute();

                            TableLoad();    //Called the TableLoad Method
                        }
                        catch(SQLException e)
                        {
                            JOptionPane.showMessageDialog(null,e); //Show the Error Message
                        }
                    }
                    else
                    {
                        email_lable.setText("Email Invalid");
                        JOptionPane.showMessageDialog(null,"Invalid Email.");
                    }       
              }
        }
        
        

    }//GEN-LAST:event_AddButtonActionPerformed

    private void UserDetailsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserDetailsTableMouseClicked
        
        //Get the Selected UserDetailsTable Values to Varibales
        int r= UserDetailsTable.getSelectedRow();
        String Col1=UserDetailsTable.getValueAt(r, 0).toString();
        String Col2=UserDetailsTable.getValueAt(r, 1).toString();
        String Col3=UserDetailsTable.getValueAt(r, 2).toString();
        String Col4=UserDetailsTable.getValueAt(r, 3).toString();
        String Col5=UserDetailsTable.getValueAt(r, 4).toString();
        String Col6=UserDetailsTable.getValueAt(r, 5).toString();
        String Col7=UserDetailsTable.getValueAt(r, 6).toString();
        int Col8=Integer.parseInt(UserDetailsTable.getValueAt(r, 7).toString());    //Get Table String Value as a integer Value
       
        
        //Set Field Values to the UserDetails Selected Values
        NoLabel.setText(Col1);
        UnameField.setText(Col2);
        EmailField.setText(Col3);
        FirstNField.setText(Col4);
        LastNField.setText(Col5);
        PasswordField.setText(Col6);
        YearBox.setSelectedItem(Col7);
        UserTypeBox.setSelectedIndex(Col8);
        
        
    }//GEN-LAST:event_UserDetailsTableMouseClicked

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
       
        
        String Val=UnameField.getText();
        
        if(Val.equals(""))          //Check whether UnameField is empty 
        {
            JOptionPane.showMessageDialog(null,"Please Select a Username.");
                    
        }
        else
        {
            
           int x= JOptionPane.showConfirmDialog(null, "Do you really want to update?"); //ConfirmDialog box gives integer values for yes==0, No==1 , Cancel==2

           if(x==0)         
           {
                //Get the Values to the Variables
                String Col1= NoLabel.getText();
                String Col2=UnameField.getText();
                String Col3=EmailField.getText();
                String Col4=FirstNField.getText();
                String Col5=LastNField.getText();
                String Col6=PasswordField.getText();
                String Col7=YearBox.getSelectedItem().toString();
                int Col8=UserTypeBox.getSelectedIndex();
                
                int s=YearBox.getSelectedIndex();
                
                if(s==0)                  //YearBox 0 index --Select Year--
                {
                      JOptionPane.showMessageDialog(null,"Please Select the Year.");
                }
                if(Col8==0)               //UserTypeBox 0 index -----Select-----
                {
                      JOptionPane.showMessageDialog(null,"Please Select the User Type.");
                }
                if(Col6.equals(""))       //PssswordBox Empty
                {
                      JOptionPane.showMessageDialog(null,"Please Type a Password.");
                }
                else
                {  
                      boolean status=ValidateEmail(EmailField.getText());
                      if(status)
                      {
                          email_lable.setText("Email valid");
                          String sql="UPDATE members SET UserName= '"+ Col2 +"',Email_Address= '"+ Col3 +"', First_Name= '"+ Col4 +"', Last_Name= '"+ Col5 +"', PassWord= '"+ Col6 +"', Learning_year= '"+ Col7 +"', type= '"+ Col8 +"' WHERE user_id='"+ Col1 +"'";//sql queary for the update the details table values in the database

                          try
                          {
                                pst=con.prepareStatement(sql);
                                pst.execute();

                                TableLoad();       //Called the TableLoad Method
                           }
                           catch(Exception e)
                           {
                                System.out.println(e);
                           }
                       }
                       else
                       {
                            email_lable.setText("Email Invalid");
                            JOptionPane.showMessageDialog(null,"Invalid Email.");
                       }  
                 }
            }
        }
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void RemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveButtonActionPerformed
        
        String Val=UnameField.getText();
        
        if(Val.equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please Select a Username.");
                    
        }
        else
        {
        
            int x= JOptionPane.showConfirmDialog(null, "Do you really want to Remove this?");

            if(x==0)
            {
                  String Col1= NoLabel.getText();

                  String sql="DELETE FROM members WHERE user_id='"+Col1+"' ";

                try
                {
                     pst=con.prepareStatement(sql);
                     pst.execute();

                     TableLoad();
                }
                catch(Exception e)
                {
                    System.out.println(e);
                }
            }
        }
    }//GEN-LAST:event_RemoveButtonActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
       
        String Col1= NoLabel.getText();
        String Col2=UnameField.getText();
        String Col3=EmailField.getText();
        String Col4=FirstNField.getText();
        String Col5=LastNField.getText();
        String Col6=PasswordField.getText();
        String Col7=YearBox.getSelectedItem().toString();
        int Col8=UserTypeBox.getSelectedIndex();
        
        if((Col1.equals("")) && (Col2.equals("")) && (Col3.equals("")) && (Col4.equals("")) && (Col5.equals("")) && (Col6.equals("")) && (Col7.equals("")) && (Col8==0))
        {
            JOptionPane.showMessageDialog(null,"There is nothing to Clear.");
                    
        }
        else
        {
            NoLabel.setText("");
            UnameField.setText("");
            EmailField.setText("");
            FirstNField.setText("");
            LastNField.setText("");
            PasswordField.setText("");
            YearBox.setSelectedIndex(0);
            UserTypeBox.setSelectedIndex(0);
        }
        
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        
        admin s1=new admin();
        s1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackButtonActionPerformed

    private void SearchFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchFieldMouseClicked
        
        SearchField.setText("");
    }//GEN-LAST:event_SearchFieldMouseClicked

    private void SearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchFieldKeyReleased
        
        String Search=SearchField.getText();        //Get the SearchField Value to a variable

        try
        {
            String sql="SELECT * FROM members WHERE Username LIKE '%"+Search+"%'";   
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();

            UserDetailsTable.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception e)
        {
            System.out.println(e);      //Display  the Exception
        }
        
    }//GEN-LAST:event_SearchFieldKeyReleased

    private void LogOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutButtonActionPerformed
       
        login l1=new login();
        l1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LogOutButtonActionPerformed

    private void PrintButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintButtonActionPerformed
        
        MessageFormat header=new MessageFormat("Report Print");
        
        MessageFormat footer=new MessageFormat("Page(0,number,integer)");
        
        try
        {
            UserDetailsTable.print(JTable.PrintMode.NORMAL, header, footer);
        }
        catch(java.awt.print.PrinterException e)
        {
            System.err.format("Cannot print %s%n",e.getMessage());      //Display the Exception
        }
       
    }//GEN-LAST:event_PrintButtonActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
        int x=jComboBox1.getSelectedIndex();
        
        if(x==1)            //User_id Ascending Order
        {
            try
            {
                String sql="SELECT * FROM members order by user_id";                              
                pst=con.prepareStatement(sql);                                   //Prepare the queary for database connection
                rs=pst.executeQuery();                                           //Execute the queary 
                UserDetailsTable.setModel(DbUtils.resultSetToTableModel(rs));    //Set the queary values to the UserDetailsTable  
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);      //Display the exception
            }
        }
            
        else if(x==2)       //User_id Descending Order
        {
            try
            {
                String sql="SELECT * FROM members order by user_id desc";                            
                pst=con.prepareStatement(sql);                                   //Prepare the queary for database connection
                rs=pst.executeQuery();                                           //Execute the queary 
                UserDetailsTable.setModel(DbUtils.resultSetToTableModel(rs));    //Set the queary values to the UserDetailsTable  
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);      //Display the exception
            }
                
            
        }
        else if(x==3)       //First_Name Ascendin Order
        {
        
            try
            {
                String sql="SELECT * FROM members order by First_Name";                              
                pst=con.prepareStatement(sql);                                   //Prepare the queary for database connection
                rs=pst.executeQuery();                                           //Execute the queary 
                UserDetailsTable.setModel(DbUtils.resultSetToTableModel(rs));    //Set the queary values to the UserDetailsTable  
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);      //Display the exception
            }
        }
        else if(x==4)       //First_Name Descending Order
        {
        
            try
            {
                String sql="SELECT * FROM members order by First_Name desc";                              
                pst=con.prepareStatement(sql);                                   //Prepare the queary for database connection
                rs=pst.executeQuery();                                           //Execute the queary 
                UserDetailsTable.setModel(DbUtils.resultSetToTableModel(rs));    //Set the queary values to the UserDetailsTable  
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);      //Display the exception
            }
        }
        else if(x==5)       //type Ascending Order
        {
        
            try
            {
                String sql="SELECT * FROM members order by type";                              
                pst=con.prepareStatement(sql);                                   //Prepare the queary for database connection
                rs=pst.executeQuery();                                           //Execute the queary 
                UserDetailsTable.setModel(DbUtils.resultSetToTableModel(rs));    //Set the queary values to the UserDetailsTable  
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);      //Display the exception
            }
        }
        else if(x==6)       //type Descending Order
        {
        
            try
            {
                String sql="SELECT * FROM members order by type desc";                              
                pst=con.prepareStatement(sql);                                   //Prepare the queary for database connection
                rs=pst.executeQuery();                                           //Execute the queary 
                UserDetailsTable.setModel(DbUtils.resultSetToTableModel(rs));    //Set the queary values to the UserDetailsTable  
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);      //Display the exception
            }
        }
        else if(x==7)       //Learning_year Ascending Order
        {
        
            try
            {
                String sql="SELECT * FROM members order by Learning_year";                              
                pst=con.prepareStatement(sql);                                   //Prepare the queary for database connection
                rs=pst.executeQuery();                                           //Execute the queary 
                UserDetailsTable.setModel(DbUtils.resultSetToTableModel(rs));    //Set the queary values to the UserDetailsTable  
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);      //Display the exception
            }
        }
        else if(x==8)       //Learning_year Descending Order
        {
        
            try
            {
                String sql="SELECT * FROM members order by Learning_year desc";                              
                pst=con.prepareStatement(sql);                                   //Prepare the queary for database connection
                rs=pst.executeQuery();                                           //Execute the queary 
                UserDetailsTable.setModel(DbUtils.resultSetToTableModel(rs));    //Set the queary values to the UserDetailsTable  
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null,e);      //Display the exception
            }
        }
            
      
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void iReportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iReportButtonActionPerformed
       try {
                JasperDesign jd=JRXmlLoader.load("G:\\Documents\\Project\\Report\\report1.jrxml");
                String sql="select * from members";
                JRDesignQuery newQuery=new JRDesignQuery();
                newQuery.setText(sql);
                jd.setQuery(newQuery);

                JasperReport jr=JasperCompileManager.compileReport(jd);
                JasperPrint jp=JasperFillManager.fillReport(jr,null,con);
                JasperViewer.viewReport(jp,false);

            }
            catch (Exception e)
            {
                System.out.println(e);
            }
    }//GEN-LAST:event_iReportButtonActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        MY_Home ud22=new MY_Home();
        ud22.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        try
        {
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"C:\\Users\\Udara Indrajith\\Documents\\NetBeansProjects\\Project\\src\\admin.pdf");
        }
        catch(Exception e)
        {
            System.out.println(e);      //Display the Exception
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        MY_Home ud22=new MY_Home();
        ud22.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        try
        {
            Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler "+"G:\\Documents\\Project\\src\\admin.pdf");
        }
        catch(Exception e)
        {
            System.out.println(e);      //Display the Exception
        }
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserDetails().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JButton BackButton;
    private javax.swing.JButton ClearButton;
    private javax.swing.JLabel Clock;
    private javax.swing.JTextField EmailField;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JTextField FirstNField;
    private javax.swing.JTextField LastNField;
    private javax.swing.JButton LogOutButton;
    private javax.swing.JLabel NOLabel;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JLabel NoLabel;
    private javax.swing.JTextField PasswordField;
    private javax.swing.JLabel PhoneLabel;
    private javax.swing.JButton PrintButton;
    private javax.swing.JButton RemoveButton;
    private javax.swing.JTextField SearchField;
    private javax.swing.JTextField UnameField;
    private javax.swing.JLabel UnameLabel;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JTable UserDetailsTable;
    private javax.swing.JComboBox UserTypeBox;
    private javax.swing.JLabel UserTypeLabel;
    private javax.swing.JComboBox<String> YearBox;
    private javax.swing.JLabel date;
    private javax.swing.JLabel email_lable;
    private javax.swing.JButton iReportButton;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator12;
    private javax.swing.JPopupMenu.Separator jSeparator13;
    private javax.swing.JPopupMenu.Separator jSeparator14;
    private javax.swing.JPopupMenu.Separator jSeparator15;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator7;
    private javax.swing.JToolBar.Separator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
